@model MujiStore.Models.tblMedia

@{
    ViewBag.Title = MujiStore.Resources.Resource.VietblMediaEditBrowTitle;
    var VidDur = "";
    int i = 0;

    var lan = System.Threading.Thread.CurrentThread.CurrentCulture;
    ViewBag.Lan = lan.Parent.Name;
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/Site.css">
<script src="~/Scripts/select2/dist/js/jquery-3.0.0.js" type="text/javascript"></script>
<script src="~/Scripts/select2/dist/js/select2.js" defer type="text/javascript"></script>
<link href="~/Scripts/select2/dist/css/select2.min.css" rel='stylesheet' type='text/css'>
<ol class="breadcrumb" id="breadcrumb">
    <li>@Html.ActionLink(MujiStore.Resources.Resource.breadcrumbVideoall, "ViewUploadDetails", "VideoFiles")</li>
    <li>
        @Html.ActionLink(@MujiStore.Resources.Resource.breadcrumbManagement, "Index", "Menus")
    </li>
    <li>
        @Html.ActionLink(@MujiStore.Resources.Resource.breadcrumbVideoChangerequest, "Index", "Videodemo")
    </li>
    <li>
        @MujiStore.Resources.Resource.VideoChangeRequested  @MujiStore.Resources.Resource.CommonEdit
    </li>
</ol>
<h2 style="color:#ec2213; background-color:#e7bebb; margin-left:-2px;">@MujiStore.Resources.Resource.CommonEdit - @MujiStore.Resources.Resource.VideoChangeRequest</h2>
<script type="text/javascript">
    $(document).ready(function () {
       
        $("#UpdateImage").click(function () {

            
            var Qstr = "";
            var vDemo = 0;
           
            for (i = window.location.href.split('/').length - 1; i > 0; i--) {
                if (window.location.href.split('/')[i] === "VideoDemo") {
                    vDemo = i
            
                    break;
                }
        
            }

            for (i = 3; i < vDemo; i++) {
                Qstr += "/" + window.location.href.split('/')[i]
            }

            $("form").attr("action", Qstr + "/VideoDemo/SaveThumbnailImage");

          

        });

        $("#UpdateVidDetail").click(function () {
            
            var Qstr = "";
            var vDemo = 0;
     
            for (i = window.location.href.split('/').length - 1; i > 0; i--) {
                if (window.location.href.split('/')[i] === "VideoDemo") {
                    vDemo = i
        
                    break;
                }
    
            }

            for (i = 3; i < vDemo; i++) {
                Qstr += "/" + window.location.href.split('/')[i]
            }

      
            $("form").attr("action", Qstr + "/VideoDemo/SaveVideoDetails");
       
        });

    });

</script><style type="text/css">
    .maxwidth {
        width: auto
    }

    .maxlen {
        max-width: 100%
    }

    textarea {
        max-width: 100%;
    }

    .form-horizontal .control-label {
        text-align: left;
    }

    input,
    select {
        width: 100%;
        background-color: #fff;
    }
    input, select {
        max-width: 600px;
        background-color: #fff;
    }
</style>
@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.MediaID)
    <div class="form-group" style="margin-left:0px">
        @MujiStore.Resources.Resource.necessaryandpressChangeRequest
    </div>
    <div class="form-group">
        
        @Html.Label(MujiStore.Resources.Resource.VietblMediaIndexID, new { @class = "control-label col-md-2" })

        <div class="col-md-10">
 
            @Html.DisplayFor(model => model.MediaID, new { htmlAttributes = new { @class = "form-control  col-md-2" } })

        </div>
    </div>
    <div class="form-group">
  
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="color: black; word-break: break-all; text-align: justify;">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control maxlen textarea", @maxlength = "500" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, 10, 1000, new { htmlAttributes = new { @class = "form-control textarea" }, @maxlength = "4000" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            @MujiStore.Resources.Resource.Pleasenotethatitistoolong
        </div>
    </div>
    <div class="form-group">
        @Html.Label(MujiStore.Resources.Resource.CntVideoDemoVideoFolderName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.FolderID, (List<SelectListItem>)ViewData["FolderDtl"], htmlAttributes: new { @class = "form-control" ,@style="width:100%"})
            @Html.ValidationMessageFor(model => model.FolderID, "", new { @class = "text-danger" })
        </div>
    </div>
    @*Datepicker changed by sabeena*@
    <div class="form-group">
        @Html.LabelFor(model => model.VideoPlayStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.TextBoxFor(model => model.VideoPlayStartDate, "{0:yyyy/MM/dd HH:mm}", new
       {
           @class = "form-control maxlen textarea",

           placeholder = "yyyy/mm/dd HH:mm",
           @style = "width:600px;"

       })
            @Html.ValidationMessageFor(model => model.VideoPlayStartDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.VideoPlayEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
    

            @Html.TextBoxFor(model => model.VideoPlayEndDate, "{0:yyyy/MM/dd HH:mm}", new
        {
           @class = "form-control maxlen textarea",

           placeholder = "yyyy/mm/dd HH:mm",
           @style = "width:600px;"

        })
            
            @Html.ValidationMessageFor(model => model.VideoPlayEndDate, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Session["ApprovalFlag"].ToString() == "2")
    {
        <div class="form-group">
            @Html.Label(MujiStore.Resources.Resource.DeployStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div style="box-shadow:1px 3px 9px 2px; height:245px; width:112%;background-color:#eee">



                    <table class="table fixed_header" style="background-color:#ffffff; width:100%;">

                        <thead style="width:1425px;">
                            <tr style="background-color:#bf5e6e; color:#ffffff; ">

                                <td class="Upload" style="font-weight:bold; ">
                                    @MujiStore.Resources.Resource.IsExists
                                </td>
                                <td class="Filename" style="font-weight:bold;">
                                    @MujiStore.Resources.Resource.StreamServerName
                                </td>
                                <td class="Filename" style="font-weight:bold; text-align:center;">
                                    @MujiStore.Resources.Resource.RobocopyExitcodeContent
                                </td>
                            </tr>
                        </thead>
                        <tbody style="width:100%;">


                            @foreach (var model in Model.deployStatus)
                            {
                                <tr style="background-color:#eee; margin-left:10px" id="blkupload">
                                    <td class="isUpload  Upload">
                                        @Html.Hidden("deployStatus[" + i + "].DeployStatusID", model.DeployStatusID)
                                        @Html.Hidden("deployStatus[" + i + "].DeployLogID", model.DeployLogID)
                                        @Html.Hidden("deployStatus[" + i + "].MediaID", model.MediaID)
                                        @Html.Hidden("deployStatus[" + i + "].FormatID", model.FormatID)
                                        @Html.Hidden("deployStatus[" + i + "].DSServer", model.DSServer)
                                        @Html.Hidden("deployStatus[" + i + "].Duration", model.Duration)
                                        @Html.Hidden("deployStatus[" + i + "].FileSize", model.FileSize)
                                        @Html.CheckBox("deployStatus[" + i + "].DELFG", model.DELFG)
                                    </td>
                                    <td style="background-color:#EEE;" class="Filename">
                                        @Html.Label("deployStatus[" + i + "].DSServer", model.DSServer, new { @class = "textbox1", @readonly = "readonly" })
                                    </td>
                                    <td style="background-color:#EEE;" class="Filename">
                                        
                                        @Html.DropDownList("deployStatus[" + i + "].Result", new SelectList((System.Collections.IEnumerable)ViewData["roboResult"], "Value", "Text", model.Result), null, new { @id = "ddlroboCode" })
                                        @Html.ValidationMessage("deployStatus[" + i + "].Result", "", new { @class = "text-danger" })
                                        
                                    </td>
                                </tr>
                                i = i + 1;
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10" style="color: black; word-break: break-all; text-align: justify;">
            <div>
                @Html.DisplayFor(model => model.Video, new { htmlAttributes = new { @class = "form-control maxwidth", @readonly = "readonly", @style = "background-color: white" } })

            </div>
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-5 col-sm-push-2" style="color: black; word-break: break-all; text-align: justify;">

            @Html.HiddenFor(model => model.CRTDT)
            @Html.HiddenFor(model => model.Video)
            @Html.HiddenFor(model => model.Thumbnail)
            @Html.HiddenFor(model => model.CRTCD)
            @Html.HiddenFor(model => model.IpAddress)
            @Html.HiddenFor(model => model.UploadType)
            @Html.HiddenFor(model => model.ThumbnailFileName)
            @Html.HiddenFor(model => model.DELFG)
            @Html.HiddenFor(model => model.Video)

            <script>
                function createImage() {
                    var canvas = document.getElementById('canvas');
                    ctx1 = myCanvas.getContext('2d');
                    ctx1.drawImage(video, 0, 0, 360, 355);
                    var image = document.getElementById("myCanvas").toDataURL("image/png");
                    image = image.replace('data:image/png;base64,', '');
                    document.getElementById('Thumbnail').value = image;

                  

                }
            </script>
          

            <video id="video" src="@Url.Content("~/Video/" + Model.Video + "")" controls="true"
                   width="400" height="250" />

          
            <canvas id="myCanvas" width="352" height="352"
                    style="border: 1px solid #d3d3d3;">
            
                @MujiStore.Resources.Resource.VietblMediaEditBrowSupport
            </canvas>
           



        </div>

        <div class="col-md-5 col-sm-push-2">



            @if (ViewBag.Lan == "ja")
            {

                if (Model.Thumbnail != "" && Model.Thumbnail != null)
                {
                    if (File.Exists(Server.MapPath("~/thumbs/" + Model.Thumbnail)))
                    {
                        <img src="@Url.Content("~/thumbs/" + Model.Thumbnail + "")" style="margin-top:120px; width:200px; height:137px;">
                    }
                    else
                    {
                        <img src="@Url.Content("~/img/Image not found_JP.png")" style="margin-top:120px; width:200px;height:137px;">
                    }

                }
                else
                {
                    <img src="@Url.Content("~/img/Thumbnail not generated_JP.png")" style="margin-top:120px; width:200px;height:137px;">
                }




            }
            else
            {

                if (Model.Thumbnail != "" && Model.Thumbnail != null)
                {
                    if (File.Exists(Server.MapPath("~/thumbs/" + Model.Thumbnail)))
                    {
                        <img src="@Url.Content("~/thumbs/" + Model.Thumbnail + "")" style="margin-top:120px; width:200px; height:137px;">
                    }
                    else
                    {
                        <img src="@Url.Content("~/img/Imagenotfound.jpg")" style="margin-top:120px; width:200px;height:137px;">
                    }

                }
                else
                {
                    <img src="@Url.Content("~/img/Thumbnailnotgenerated.jpg")" style="margin-top:120px; width:200px;height:137px;">
                }


            }

            <div style="margin-top: 15px;margin-left: 65px;">
                @Html.Label(MujiStore.Resources.Resource.CntVideoDemoVideoThambnail, MujiStore.Resources.Resource.CntVideoDemoVideoThambnail)
            </div>

        </div>
    </div>


    <div class="form-group">

        @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="color: black; word-break: break-all; text-align: justify;">
            @Html.DisplayFor(model => model.Thumbnail, new { htmlAttributes = new { @class = "control-label ", @readonly = "readonly", @style = "background-color: white; margin-top: 7px;" } })
            @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label(MujiStore.Resources.Resource.CheckApprovalstatus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(model => model.ApprovalStatus, (List<SelectListItem>)ViewData["ApprovalDtl"], htmlAttributes: new { @class = "form-control col-sm-3" })
            <label style="font-weight:normal;margin-top:10px;margin-left:10px">@MujiStore.Resources.Resource.Requesttochange</label>
           

        </div>
    </div>
    
    <div class="form-group">
        @Html.Label(@MujiStore.Resources.Resource.CommonDelete, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox" style="padding-left: 20px;">
                @Html.CheckBoxFor(model => model.PhysicalDELFG, htmlAttributes: new { @class = "control-label ", @style = "width:12px; " })
             
                    @MujiStore.Resources.Resource.videowillbedeleted
             
               

               
            </div>

        </div>

    </div>
    <div class="form-group">
        <label class="col-sm-2">
            @MujiStore.Resources.Resource.Comments
        </label>
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Comments, 10, 1000, new { htmlAttributes = new { @class = "form-control textarea" }, @maxlength = "2000" })
            @MujiStore.Resources.Resource.memofortheapprover

            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label(@MujiStore.Resources.Resource.Registeredperson, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10">
            @Html.LabelForModel(Model.Registerer, new { htmlAttributes = new { @class = "form-control  col-md-2" } })
        </div>

    </div>
    <div class="form-group">
        @Html.Label(@MujiStore.Resources.Resource.Authorizer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.LabelForModel(Model.Accepter, new { htmlAttributes = new { @class = "form-control  col-md-2" } })
        </div>
    </div>
</div>



<div style="margin-bottom:60px;margin-left: -15px;" class="form-group">

    <div class="col-sm-2" style="margin-top:20px">
        @if (ViewBag.checkpage == null)
        {
            <a href=@Url.Action("Index",new { page = Model.page}) style="padding-bottom:8px;padding-top:8px;">
                @MujiStore.Resources.Resource.CommonBackToList
            </a>
        }
        else
        {

           
    <button class="btn btn-default" onclick="self.close()"> @MujiStore.Resources.Resource.VieMediaViewLogBackToVideo</button>
        }


    </div>
            <div class="col-md-3">
                <input type="submit" id="UpdateVidDetail" style="width: 205px; margin-left:0px;   margin-top:10px;  height:35px; border: solid 1px #ccc; border-radius:5px; background-color:#7f0019;color:#fff;" value="@MujiStore.Resources.Resource.CntVideoDemoVideoUpdateVideoInfo" />
            </div>

            <div class="col-md-5">

                @if (Model.ConvertStatus == 3) //VJ 20200603 ConvertStatus 3 Converted  Changed
                {
                    <input type="submit" id="UpdateImage" style="width: 205px; height:35px; margin-left:0px;   margin-top:10px;    border: solid 1px #ccc; border-radius:5px; background-color:#7f0019;color:#fff;" value="@MujiStore.Resources.Resource.VietblMediaEditUpdateDetailsButton" onclick="createImage()" />
                }
            </div>



        </div>
        }

        @section Scripts {
            @Scripts.Render("~/bundles/jquery")
            @Scripts.Render("~/bundles/jqueryval")
        }

        <script type="text/javascript">


            $(document).ready(function () {
                $("#FolderID").select2({
                    templateResult: formatOptions
                });


      
            });

            function formatOptions(state) {
                $('.select2-search__field').remove();
     
                if (!state.id) { return state.text; }

         
                var strfolder = state.text;
           
                var root = strfolder.substr(1, (strfolder.length - strfolder.trim().length - 1))
               

                if (location.hostname != 'localhost') {

                    var $state = $(
                        '<span  style="color:black">' + root + '<img sytle="display: inline-block;" src="~/../../../img/folder-close1.png"  /> ' + strfolder.trim() + '</span>'
                    );
                }
                else {
                    var $state = $(
                        '<span  style="color:black">' + root + '<img sytle="display: inline-block;" src="/../img/folder-close1.png"  /> ' + strfolder.trim() + '</span>'
                    );
                }
           
                return $state;

            }
            function split_on_first_word(str) {
                str = str.trim();  // Clean string by removing beginning and ending spaces.

                var arr = [];
                var pos = str.indexOf(' ');  // Find position of first space

                if (pos === -1) {
                    // No space found
                    arr.push(str);                // First word (or empty)
                    arr.push('');                 // Empty (no next words)
                } else {
                    // Split on first space
                    arr.push(str.substr(0, pos));         // First word
                    arr.push(str.substr(pos + 1).trim());  // Next words
                }
                //arr = arr.substring(0, arr.length - 1);
                return arr;
            }

            function getSourceID() {
                alert($("#ParentID").val())
            }
        </script>
