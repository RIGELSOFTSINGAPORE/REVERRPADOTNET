
@using PagedList.Mvc
@{
    ViewBag.Title = MujiStore.Resources.Resource.VieUserIndexBrowTitle;
    var usereditDtl = (MujiStore.Models.tblUser)ViewData["UserEditInfo"];
    var userDtl = ViewData["UserInfo"] as IEnumerable<MujiStore.Models.tblUser>;

}
<style>
    .btn-success {
        color: #fff;
        background-color: #822433;
        border-color: #4CAE61;
    }

    #link a {
        background: none;
        color: blue;
    }
</style>
<ol class="breadcrumb" id="breadcrumb">
    <li>@Html.ActionLink(MujiStore.Resources.Resource.breadcrumbVideoall, "ViewUploadDetails", "VideoFiles")</li>
    <li>
        @Html.ActionLink(@MujiStore.Resources.Resource.breadcrumbManagement, "Index", "Menus")
    </li>
    <li>@Html.ActionLink(MujiStore.Resources.Resource.breadcrumbSystemmaintenance, "InfoMenus", "Menus")</li>
    <li>
        @MujiStore.Resources.Resource.BreadcrumbUser
    </li>
</ol>
<h2 style="color:#ec2213; background-color:#e7bebb; margin-left:-4px; margin-bottom:15px;">@MujiStore.Resources.Resource.Createmodifyuser</h2>

@using (Html.BeginForm("Index_new", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => usereditDtl.OldPassword)
        @Html.HiddenFor(model => usereditDtl.NewPassword)
        @Html.HiddenFor(model => usereditDtl.ConfirmNewPassword)
        @Html.HiddenFor(model => usereditDtl.UserID, new { @id = "UserID" })
        @Html.HiddenFor(model => usereditDtl.CRTCD)
        @Html.HiddenFor(model => usereditDtl.CRTDT)
        @Html.HiddenFor(model => usereditDtl.UserEmail)

        <div class="table-responsive">
            @MujiStore.Resources.Resource.IfyouenteranexistinguserID
            <br />
            @MujiStore.Resources.Resource.IfyoucheckDeleteandpresstheupdatebutton
            <table class="table usertbl"  >
                <tr>
                    <td style="width:20%;border: 1px solid ">
                        @Html.Label(MujiStore.Resources.Resource.userid, htmlAttributes: new { @class = "control-label " })
                    </td>
                    <td style="border: 1px solid">
                        @Html.EditorFor(model => usereditDtl.ID, "", new { htmlAttributes = new { @class = "form-control textbox", @AutoCompleteType = "Disabled" } })
                        @Html.ValidationMessageFor(model => usereditDtl.ID, "", new { @class = "text-danger textbox" })

                    </td>
                </tr>
                <tr>
                    <td style="border: 1px solid">
                        @Html.Label(MujiStore.Resources.Resource.DisplayName, htmlAttributes: new { @class = "control-label " })
                    </td>
                    <td style="border: 1px solid">
                        @Html.EditorFor(model => usereditDtl.UserName, new { htmlAttributes = new { @class = "form-control textbox", @autocomplete = "disable-autocomplete" } })
                        @Html.ValidationMessageFor(model => usereditDtl.UserName, "", new { @class = "text-danger" })

                    </td>
                </tr>
                <tr>
                    <td style="border: 1px solid">

                        @Html.LabelFor(model => usereditDtl.Password, htmlAttributes: new { @class = "control-label " })
                    <td style="border: 1px solid">

                        @Html.EditorFor(model => usereditDtl.Password, new { htmlAttributes = new { @class = "form-control textbox", @name = "input3", @id = "input3", @type = "password", @maxlength = "25", @autocomplete = "new-password" } })
                        @Html.ValidationMessageFor(model => usereditDtl.Password, "", new { @class = "text-danger col-sm-12", @style = "margin-left: -15px;" })
                        <label style="font-weight:normal">
                            @MujiStore.Resources.Resource.Enterthepasswordwhenyouchange
                        </label>
                        <span toggle="#input3" class="eye fa fa-fw fa-eye  field-icon toggle-password"> </span>


                    </td>
                </tr>
                <tr>

                    <td style="border: 1px solid">
                        @Html.Label(MujiStore.Resources.Resource.VieUserCreateConfirmPassword, htmlAttributes: new { @class = "control-label " })
                    </td>
                    <td style="border: 1px solid">
                        @Html.Password("ConfirmPassword")
                        @if (TempData["Confimmg"] != null)
                        {
                        @Html.Label(TempData["Confimmg"] as string, new { @class = "text-danger" })
                          
                        }
                    </td>

                </tr>
                <tr>

                    <td style="border: 1px solid">
                        @Html.Label(MujiStore.Resources.Resource.VieUserCreateAuthority, htmlAttributes: new { @class = "control-label " })
                    </td>
                    <td style="border: 1px solid">
                        @Html.EditorFor(model => usereditDtl.Authority1)
                        @Html.Label(MujiStore.Resources.Resource.VieUserCreateRemovingfeedback)
                        <br />
                        @Html.EditorFor(model => usereditDtl.Authority2)
                        @Html.Label(MujiStore.Resources.Resource.VieUserCreateBasicManagement)
                        <br />
                        @Html.EditorFor(model => usereditDtl.Authority4)
                        @Html.Label(MujiStore.Resources.Resource.VieUserCreateVideoChangeReq)
                        <br />
                        @Html.EditorFor(model => usereditDtl.Authority8)
                        @Html.Label(MujiStore.Resources.Resource.VieUserCreateVideoChangeApp)
                        <br />
                        @Html.EditorFor(model => usereditDtl.Authority16)
                        @Html.Label(MujiStore.Resources.Resource.VieUserCreatesystemManagement)

                    </td>

                </tr>
                <tr>

                    <td style="border: 1px solid">
                        @Html.Label(MujiStore.Resources.Resource.DeleteUsermgt, htmlAttributes: new { @class = "control-label " })
                    </td>
                    <td style="border: 1px solid">
                        @Html.EditorFor(model => usereditDtl.DELFG)

                    </td>

                </tr>
                <tr>
                    <td colspan="2">
                        <br />
                        <input type="submit" value="@MujiStore.Resources.Resource.UserUpdate" name="Submit" style="margin-left:0px;margin-top: -7px;height:31px;" class="btn btn-default " />
                        <a href=@Url.Action("Index_new","User" , new { id = string.Empty}) class="clear">
                            @MujiStore.Resources.Resource.reset
                        </a>

                    </td>

                </tr>

            </table>
        </div>


    </div>
}
<br />
<h2 style="color:#ec2213; background-color:#e7bebb; margin-left:-4px; margin-bottom:15px;">@MujiStore.Resources.Resource.Modifyingexistingusers</h2>

@MujiStore.Resources.Resource.Ifyouwanttomodifyanexistinguser
<table class="table usertbl1" style="background-color:#ffffff; ">
    <tr  class="thcolor" >
        <th>
            @Html.DisplayName(MujiStore.Resources.Resource.userid)
        </th>
        <th>
            @Html.DisplayName(MujiStore.Resources.Resource.DisplayName)
        </th>
        
    </tr>
    <tbody style="width:100%">
        @foreach (var item in userDtl)
        {
            @Html.AntiForgeryToken()
            <tr style="background-color:#EEE;" id="link">
                <td>
                   
                    @Html.ActionLink(item.ID, "Index_new", new { id = item.UserID })

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
               
            </tr>
        }
    </tbody>
</table>

<br />


@if (TempData["Deletemsg"] != null)
{
    <div class="modal fade" id="DeleteUserModal" tabindex="-1" role="dialog" aria-labelledby="DeleteVideoModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="height:100px">
               
                <div class="modal-body DeleteVastucontent">
                    <div>
                        @MujiStore.Resources.Resource.Areyousureyoutodelete
                    </div>
                    <div style="float:right">
                        <button type="button" class="btn btn-secondary" style=" background: white; border:2px solid #822433" data-dismiss="modal">   @MujiStore.Resources.Resource.No</button>
                        <button type="button" class="btn btn-primary btndeleteUser " >   @MujiStore.Resources.Resource.Yes</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
}


<div class="modal" id="myModalSucc" role="dialog">
    <div class="modal-dialog modal-sm" style="">
        <div class="modal-content">
            <div class="modal-header" style="border:none">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
              
                <p style="text-align:center;font-weight:800;"> </p>
            </div>
            <div class="modal-body" style="color: black; word-break: break-all; text-align: justify;">
               
            </div>
            <div class="modal-footer" style="border:none">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary btndeleteUser " >   @MujiStore.Resources.Resource.Yes</button>

               
            </div>
        </div>
    </div>
</div>

@Html.Hidden("DeleteUserId")
@Html.Hidden("UserID")
@section scripts
{

    <script>

         var Succ = '@TempData["Deletemsg"]';
    if (Succ != '') {

        $("#DeleteUserModal").modal('show');

    }


        $('.btndeleteUser').on('click', function () {

            var UserID = $('#UserID').val();
            $('#DeleteUserId').val(UserID);
            DeleteVastu($('#DeleteUserId').val());

        });
        function DeleteVastu(UserID) {
            $('#DeleteUserModal').modal('hide');
            $.ajax({
                url: '@Url.Action("Deleteuser", "User")',
                type: 'POST',
                data: { 'UserID': UserID },
                success: function (result) {
                    if (result.errorcode == 1) {
                        window.location.href = "@Url.Action("Index_new", "User", new { @id =string.Empty, status = "delete"})";
                    }
                    else {
                          window.location.href = "@Url.Action("Index_new", "User", new { @id = string.Empty, status = "delete" })";
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
    </script>
}