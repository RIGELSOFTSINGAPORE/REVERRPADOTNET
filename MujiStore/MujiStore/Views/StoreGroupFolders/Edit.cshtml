@model MujiStore.Models.tblStoreGroupFolder

@{
    ViewBag.Title = MujiStore.Resources.Resource.VieStoreGroupFoldersEditBrowTitle;
}
<style>
    .form-horizontal .control-label {
        padding-top: 7px;
        margin-bottom: 10px;
        text-align: left;
    }
</style>
<h2 style="color:#ec2213; background-color:#e7bebb; margin-left:-2px; margin-bottom:14px;">@MujiStore.Resources.Resource.Edit - @MujiStore.Resources.Resource.VieStoreGroupFoldersIndexH2</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StoreGroupFolderID)

        <div class="form-group">
            @Html.LabelFor(model => model.StoreGroupID, MujiStore.Resources.Resource.ModtblStoreGroupFolderStoreGroupID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StoreGroupID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StoreGroupID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FolderID, MujiStore.Resources.Resource.ModtblStoreGroupFolderFolderID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FolderID", null, htmlAttributes: new { @class = "form-control" })
                  
         
                @Html.ValidationMessageFor(model => model.FolderID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DELFG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox" style="margin-left:20px">
                    @Html.HiddenFor(model => model.CRTCD)
                    @Html.HiddenFor(model => model.CRTDT)
                    @Html.EditorFor(model => model.DELFG)
                    @Html.ValidationMessageFor(model => model.DELFG, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="form-group row">
            <div class="col-sm-2">
                @Html.ActionLink(MujiStore.Resources.Resource.CommonBackToList, "Index", new { page = Model.page, @class = "linkclass" }, null)
            </div>
            <div class=" col-md-10">
                <input type="submit" value=@MujiStore.Resources.Resource.CommonSave class="btn btn-default" style="margin-left: 0px; width: 90px; margin-top: -5px; padding-bottom: 2px; padding-top: 4px;" />

            </div>
        </div>
    </div>
}

<script src="~/Scripts/select2/dist/js/jquery-3.0.0.js" type="text/javascript"></script>
<script src="~/Scripts/select2/dist/js/select2.js" defer type="text/javascript"></script>
<link href="~/Scripts/select2/dist/css/select2.min.css" rel='stylesheet' type='text/css'>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">

    $(document).ready(function () {
        $("#FolderID").select2({
            templateResult: formatOptions
        });
    });

    function formatOptions(state) {
        $('.select2-search__field').remove();
        if (!state.id) { return state.text; }
        var strfolder = state.text;
        var root = strfolder.substr(1, (strfolder.length - strfolder.trim().length - 1))
        var Qstr = "";
        var vDemo = 0
        var FiUrl = "";
        var url2 = window.location.href.replace(window.location.origin, "");
        var url3 = url2.substr(0, url2.indexOf('/StoreGroupFolders'));
        FiUrl = url3 + "/img/folder-close1.png";
        var $state = $(
            '<span  style="color:black">' + root + '<img sytle="display: inline-block;" src=' + FiUrl + '  /> ' + strfolder.trim() + '</span>'
        );
        return $state;

    }
    function split_on_first_word(str) {
        str = str.trim();  // Clean string by removing beginning and ending spaces.

        var arr = [];
        var pos = str.indexOf(' ');  // Find position of first space

        if (pos === -1) {
            // No space found
            arr.push(str);                // First word (or empty)
            arr.push('');                 // Empty (no next words)
        } else {
            // Split on first space
            arr.push(str.substr(0, pos));         // First word
            arr.push(str.substr(pos + 1).trim());  // Next words
        }
        //arr = arr.substring(0, arr.length - 1);
        return arr;
    }
    function getSourceID() {
        alert($("#ParentID").val())
    }
</script>