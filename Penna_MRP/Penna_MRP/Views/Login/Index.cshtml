@model Penna_Common.Login
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Penna - LogIn Page</title>
    

   <style>
       html, body {
           /* height: 100% !important;*/
           margin: 0;
           font-family: Roboto;
           /*background-color: rgba(5,133,186,1) !important;*/
           /*background-image: url('../../assets/img/image 50@2x.png');*/
           background-image: url('../../assets/img/image 50.png');
           /*background-image: url('../../assets/img/loginbg.png');*/
           /*background-image: url("paper.gif");*/
       }
       .login-container-all {
           /*background-color: rgba(5,133,186,1);
           min-height:1200px;*/
       }
       .login-container {
           width: 42%;
           min-height: 400px;
           top: 125px;
           left: 30%;
           border-radius: 14px;
           background: white;
           position: absolute;
       }
       
       .Image-container{
           text-align:center;
       }
       .Logintxt {
           text-align: center;
           white-space: nowrap;
           font-family: Roboto;
           font-style: normal;
           font-weight: bold;
           font-size: 24px;
           color: rgba(0,0,0,1);
       }
       .txtbox {
           border: 1px solid rgba(112,112,112,1);
           border-color: rgba(112,112,112,1);
           border-width: 1px;
           border-radius: 4px;
           width: 100%;
           height: 40px;
           font-size:24px;
       }
       .lbl {
           white-space: nowrap;
           text-align: left;
           font-family: Roboto;
           font-style: normal;
           font-weight: normal;
           font-size: 24px;
           color: rgba(112,112,112,1);
       }
       .text-danger {
           white-space: nowrap;          
           font-family: Roboto;
           font-style: normal;
           font-weight: normal;
           font-size: 24px;
           color: red;
       }
       .padd {
           padding: 0 15%;
       }
       .signin {
           border: 1px solid rgba(112,112,112,1);
           background: rgba(5,133,186,1);
           width: 25%;
           height: 70px;
           color: white;
           font-size: 24px;
           border-radius: 8px;
           cursor:pointer;
       }
   </style>
</head>
<body>
    <!-- partial:index.partial.html -->
    <div id="Login" class="login-container-all">
        <div class="login-container">
            <div class="Image-container">
                <img src="~/assets/img/Image_1.png" />
            </div>
            <div class="Logintxt">
                <br />
                <span>
                    Login
                </span>

            </div>
            @*@using (Html.BeginForm())
        {
            @Html.ValidationSummary(false)
            <div class="padd">
                <div><span class="lbl">User Name</span></div>
                <div style="padding:10px 0">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "txtbox" } })
                </div>
            </div>
            <div class="padd">
                <div><span class="lbl">Password</span></div>
                <div style="padding:10px 0">
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "txtbox" } })
                </div>
            </div>
            <div class="Image-container" style="padding: 20px;">
                <input type="button" class="signin" value="Sign In" />
                <br />
                <br />
            </div>
        }*@
            @using (Html.BeginForm("SignIn", "Login", FormMethod.Post))
            {
                @Html.ValidationSummary(false)

                @*@Html.AntiForgeryToken()*@

                <div class="padd">
                    <div><span class="lbl">User Name</span></div>
                    <div style="padding:10px 0">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "txtbox" } })
                        @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="padd">
                    <div><span class="lbl">    Password
</span></div>
                    <div style="padding:10px 0">
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "txtbox", @type = "password" } })
                        @Html.ValidationMessageFor(model => model.password, null, new { @class = "text-danger"})

                    </div>
                </div>
                @*<a href="#">Login</a>*@
        <div class="Image-container" style="padding: 20px;">
            @*  <input type="button" class="signin" value="Sign In" />*@
            <button type="submit" class="signin">Sign In</button>
            <br />
            <br />
            @Html.Label("ErrorMsg", Convert.ToString(TempData["Message"]) == null ? "" : Convert.ToString(TempData["Message"]), new { @class = "text-danger textred" })

            <br />
        </div>
               

                
            }


        </div>
       
    </div>
</body>
</html>