@using Penna_Common
@model PennaUser_Master
@{
    var _UserMaster = ViewData["UserMaster"] as List<PennaUser_Master>;
    @*@model PagedList.PagedList<Penna_Common.PennaUser_Master>*@
ViewBag.Title = "Manage Users";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Manage Users</title>
    <style>
        body {
            font-size: 14px;
        }

        .boxshadow {
            box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;
        }

        .contain1 {
            min-height: 150px;
            width: 100%;
            background: #fff;
            border-radius: 12px;
            padding: 15px 20px;
        }

        .contain3 {
            width: 100%;
            background: #fff;
            border-radius: 16px;
            padding: 30px 50px;
        }

        .contain2 {
          
            width: 100%;
            background: #fff;
            border-radius: 16px;
            padding: 30px 50px;
            margin-top: 40px;
        }

        h1 {
            background: none;
            color: black;
            padding: 0;
            font-size: 26px;
        }

        .drpdown {
            border: 1.5px solid rgba(112,112,112,1);
            width: 152px;
            height: 32px;
            border-radius: 4px;
        }

        .txtbox {
            border: 1.5px solid rgba(112,112,112,1);
            width: 48%;
            /*height: 32px !important;*/
            border-radius: 4px;
        }

        td {
            padding: 10px;
        }

        .startbatch {
            background: rgba(5,133,186,1);
            color: white;
            font-weight: bold;
            width: 100%;
            height: 32px !important;
            border-radius: 4px;
            border: 2px solid rgba(5,133,186,1);
        }

        .stopbatch {
            background: #fff;
            color: black;
            font-weight: bold;
            border: 2px solid rgba(5,133,186,1);
            width: 100%;
            height: 32px !important;
            border-radius: 4px;
        }

        .activeh1 {
            background: rgba(244,244,244,1);
            border-bottom: 2px solid rgba(5,133,186,1);
        }

        .h1border {
            border-bottom: 2px solid #dcbfe9;
            border-radius: 0px;
        }

        .table2 {
            border: 2px solid #dcbfe9 !important;
            border-left: 2px solid #dcbfe9 !important;
            border-radius: 16px !important;
            padding: 10px;
            width: 100%;
            border-collapse: collapse;
            border-radius: 1em;
            overflow: hidden;
        }

        .table2header {
            border-collapse: collapse;
            border: 2px solid #dcbfe9;
            border-radius: 16px;
            background: #F1F1F1;
            padding: 10px;
            height: 32px;
            text-align: left;
        }
        /* table {
                border-collapse: collapse;
                border-radius: 1em;
                overflow: hidden;
            }*/

        .tr {
            border: 2px solid #dcbfe9;
        }

        th {
            font-weight: bold;
            padding: 10px;
            text-align: left;
        }
        .disabled {
            pointer-events: none;
        }
    </style>

</head>
<body>
    <div>
        <div class="row">

            <div class=" col-sm-6">
            <div class="boxshadow contain1 ">
                <h1>Users Listing</h1>
                <div class="table-responsive">
                    <table class="table2">
                        <thead>
                            <tr class="table2header">
                                <th>
                                    @Html.DisplayName("User Name")
                                </th>
                                <th>

                                    @Html.DisplayName("Role")
                                </th>
                                <th>
                                    @Html.DisplayName("Password")
                                </th>
                                <th>
                                    @Html.DisplayName("Active")
                                </th>
                                <th>
                                    @Html.DisplayName("Edit")
                                </th>
                                <th>
                                    @Html.DisplayName("Delete")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (_UserMaster != null)
                            {
                                if (_UserMaster.Count > 0)
                                {
                                    foreach (var item in _UserMaster)
                                    {
                                        <tr>
                                            <td>

                                                @Html.DisplayFor(modelItem => item.UserName)
                                            </td>
                                            <td>

                                                @Html.DisplayFor(modelItem => item.Role_Name)
                                            </td>
                                            <td>

                                                @Html.DisplayFor(modelItem => item.Password)
                                            </td>
                                            <td>
                                                @Html.CheckBoxFor(modelItem => item.IsActive,new { @class = "disabled" })
                                            </td>
                                            <td>
                                                <a href="@Url.Action("Edit","AdminManageUsers",new { id = item.UserId})"> <span class="glyphicon glyphicon-pencil" title=Edit></span></a>
                                            </td>
                                            <td>
                                                <a href="#"  onclick="DeleteUserMaster(@item.UserId);" id="btnDelete" data-toggle="modal" data-target="#deleteModal" title=Delete><span class="glyphicon glyphicon-trash"></span></a>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3" align="center">No Record Found</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="3" align="center">No Record Found</td>
                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
            </div>
            </div>
            <div class="col-sm-6">
            <div class="boxshadow contain1 " >
                <h1>Add/Edit Users</h1>
                <div class="row">
                    <div class="col-12 grid-margin">

                        <div class="card-body">
                            @using (Html.BeginForm("Create", "AdminManageUsers", FormMethod.Post, new { @id = "myForm" }))
                            {
                            <form class="form-sample">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group row">

                                            <label class="col-sm-4 col-form-label">User Name</label>
                                            <div class="col-sm-8">
                                                @Html.HiddenFor(model => model.UserId)
                                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @id = "UserName" } })
                                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                                <label class="text-danger">@ViewBag.Uname</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group row">

                                            <label class="col-sm-4 col-form-label">Passowrd</label>
                                            <div class="col-sm-8">
                                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @id = "Password" } })
                                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group row">

                                            <label class="col-sm-4 col-form-label">Role</label>
                                            <div class="col-sm-8">
                                                @Html.DropDownListFor(model => model.RoleId, ViewBag.RoleList as List<SelectListItem>, new { @class = "form-control", @id = "Role" })
                                                @Html.ValidationMessageFor(model => model.Role_Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group row">

                                            <label class="col-sm-4 col-form-label">Active</label>
                                            <div class="col-sm-8">
                                               
                                                @Html.CheckBoxFor(model => model.IsActive, new {  @id = "IsActive" })
                                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                            </div>
                                            </div>
                                        </div>
                                    </div>

                                <div style="text-align:right">
                                    <button type="submit" style="width:20%" id="savebtn" class="startbatch">Save</button>

                                    <a class="stopbatch" style=" padding: 4px 10px;" href="@Url.Action("Index", "AdminManageUsers")">Cancel</a>
                                    @*<a class="btn btn-light" onclick="CloseDialog()">Cancel</a>*@
                                    @*<button class="btn btn-light" onclick="CloseDialog()">Cancel</button>
        <br />
        <br />
        <br />*@
                                </div>

                            </form>
                            }
                        </div>

                    </div>

</div>
        

    </div>
            </div>
            </div>
        </div>

    <div class="modal fade" id="DeleteUserModal" tabindex="-1" role="dialog" aria-labelledby="DeleteVideoModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="DeleteAreaModalLabel">Delete Users</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body DeleteAreacontent">
                    Are you sure delete?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
                    <button type="button" onclick="DeleteUser()" class="btn btn-primary btndeleteUser btn-success">yes</button>
                </div>
            </div>
        </div>
    </div>
    @Html.Hidden("DeleteUserId")
</body>
</html>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">
   
    $(document).ready(function () {
       
        var UserName = ($('#UserName').val());
        var Password = ($('#Password').val());
        var Role = ($('#Role').val());
        document.getElementById("savebtn").style.pointerEvents = "none";
       // $('#savebtn').prop('disabled', true);
        if (Role != "0" && Password != "" && UserName != "") {
      
            document.getElementById("savebtn").style.pointerEvents = "auto";
        }
    });
    $("input").change(function () {
        var UserName = ($('#UserName').val());
        var Password = ($('#Password').val());
        var Role = ($('#Role').val());
        if (Role !== "0" && Password != "" && UserName != "") {
        
            document.getElementById("savebtn").style.pointerEvents = "auto";
        }
        else {
           
            document.getElementById("savebtn").style.pointerEvents = "none";
        }
    });
    $("select").change(function () {
        debugger;
        var UserName = ($('#UserName').val());
        var Password = ($('#Password').val());
        var Role = ($('#Role').val());
        if (Role !== "0" && Password != "" && UserName != "") {
    
            document.getElementById("savebtn").style.pointerEvents = "auto";
        }
        else {
         
            document.getElementById("savebtn").style.pointerEvents = "none";
        }
    });
        function DeleteUserMaster(UserID) {

            $('#DeleteUserId').val(UserID);
            $('#DeleteUserModal').modal('show');
        }

    function DeleteUser() {

         debugger;
        $('#DeleteUserModal').modal('hide');
        var id = ($('#DeleteUserId').val());
        var baseUrl = '@Url.Action("DeleteUser", "AdminManageUsers")';
        var parm = "";
        parm += '/' + id;
        baseUrl += parm;
        window.location.href = baseUrl;
    }

    $('.btndeleteUser').on('click', function () {
        debugger;
        $('#DeleteUserModal').modal('hide');
        var id = ($('#DeleteUserId').val());
        var baseUrl = '@Url.Action("DeleteUser", "AdminManageUsers")';
        var parm = "";
        parm += '/' + id;
        baseUrl += parm;
        window.location.href = baseUrl;
        });


</script>
