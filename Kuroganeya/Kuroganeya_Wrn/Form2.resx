<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAA
        AAClVQAA9/v/AP///wDOonMAhJYAAOfTxgCcbQgA3s+lAJSuIQDv8+cAlHUAAMbPhACMphAA5+/WALV1
        KQDW26UAnLIpAPf39wCcaQAArcNaAISeAADe58YAtWkYAOfPtQC9jkoA9/fvAKVtAADO26UAlKoYAK1Z
        AADv494AvYZCAN7jtQCcsjkA//f3AL2+awCMlgAA79/OALVlEADny60ApaYxAPfz7wCcdQAA1tucAIyq
        GACtVQAA//f/AL26awCMkgAA79vOALVhEADnx60AlLIpAPfr5wCccQAAztucAIymGAD3894AvXkxANbf
        rQCctjEA//PvAJxtAAC9z3sAjKYIAO/j1gC9cSkA59O9AKVZAAD/+/8AzqJ7AISaAADv28YArWkQAN7H
        rQCUrikA9/PnAJR5AADG04QAjKoQAO/v3gC9dSkA1tutAJyyMQD/9+8ApWEAAL3LcwCEogAA79/WALVx
        KQDn07UAxopKAPf79wCceQAA1t+lAJSmIQCtXQAA9+/nAMaGSgDn370Apb5KAP/79wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJFRWUCAgICRUVF
        RUVFAgICAgICAgICAgICAgICRQJlID9WVlZWVlZWVlZWPyARAgICAgICAgICAgICAgJFZTtTVxRXV1dX
        V1dXV0ATDUUCAgICAgICAgICAkVFRWVSEFcUFFdHMDAwMDAwKAclJSVYPUUCAgICAgICRUUiDzRXV1cU
        MDZVVVVVVVVJWUJZUQM1AgICAgICAkUCIg9LFFcUFDA+HS0dLS0tLS0dLR1iMUUCAgICAgICAiIPS1cU
        V1cwPh0tHR0dLS0tHS0dWyVFRQICAgICAgJcG0tXVxRXMD4dHR0dHR0tLR0dHWIxAgICAgICAgJFIitL
        V1dXFDA+HS0dHR0dLS0dHR1iMUUCAgICAkUCAlQ3CBQUFBQwPh0tHR0dHR0tHR0dWzFFAQICAgICRQIC
        FVNXV1dXMD4dHR0dLR0dHR0dHWIxAgICAgICAgJFAkUJVgwUVyQ+HR0dHR0dHR0tHR1iJUUCAgICAgIC
        AkUCRUUJVgwkPh0tHR0dHR0dHR0dYjFFAgICAgICAgICAgICAgIJLwYdHR0dHR0dHR1EHR8lRQECAgIC
        AgICAgICRQICAkFbHR0dHR0dHR0dHR0aIxlFAgICAgICAgICAgJFAkVBWx0dHR0dHR0dHR0dPjBPThlF
        AgICAgICAgICAgJFHlsdLS0dHR0dHR0dHRIwV1csThkCAgICAgICAgICRUVIUR0tHR0dHR0dHR0dNkcU
        FFdPCxkCAgICAgICAgICAkUnWS0tLR0dHR0dHR0dTUcUFFcsCxkCAgICAgICAgICAmUnUR0tHR0dHR0d
        HR1gXUdXFFcsCxkCAgJFAgICAgICRUUnDh0tHR0dHR0dHR0dKgRXFBQsTkwCAgJFAgICAgICAi4zDh0t
        HR0dHR0AHR0dNiRXFFccCxkCAgICAgICAgICAmVKUR0dHR0dHR0dHR0dCkdXFFcsCxkCAgICAgICAgIC
        AmUnUR0tHR0dHR0dHS0dKkdXFBQsC0wCRUUCAgICAgICRUUnDh0tHR0dHR0dLS0dCiRXFFdPPxkCAgIC
        AgICAgICAiIzDh0tHR0dHR0dLS0dNgRXFFc4CxkCAgICAgICAgICAmUnWR0dHR0dHR0dHR0dKl88UyFk
        XhkCAgICAgICAgICAmUnQh0dHR0dHR0dHS0dGGNQUFA5IgICAgICAgICAgICRUUnOiYmJiYmJiYyJiYW
        RmFFRUUCAgICAgICAgICAgICRUUlFxcXFxcXFxcXQ1oFKUVFRUUCAgICAgICAgICAgICAgICAgICAgIC
        AgICAgICAgICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>